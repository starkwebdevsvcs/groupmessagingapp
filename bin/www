#!/usr/bin/env node

// Module dependencies
let app = require('../app');
let debug = require('debug')('groupmessagingapp:server');
let http = require('http');

// Get port from environment and store in Express.
let port = normalizePort(process.env.PORT || '3001');
app.set('port', port);

// Listen on provided port, on all network interfaces.
http.createServer(app).listen((port), function() {
    console.log('Server started on port 3001 (localhost) or '+process.env.PORT+' (heroku).');
});
http.createServer(app).on('error', onError);
http.createServer(app).on('listening', onListening);

// Event listener for HTTP server "listening" event.
function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}

// * Event listener for HTTP server "error" event.
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Normalize a port into a number, string, or false.
function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        // named pipe
        return val;
    }
    if (port >= 0) {
        // port number
        return port;
    }
    return false;
}
